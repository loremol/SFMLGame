cmake_minimum_required(VERSION 3.18)
project(SFMLGame)
set(CMAKE_CXX_STANDARD 17)
set(SFML_STATIC_LIBRARIES FALSE)
set(SOURCE_FILES src/main.cpp src/Map/Tile.cpp src/Map/Tile.hpp src/Map/World.cpp src/Map/World.hpp src/Entities/Entity.hpp src/Entities/Player.cpp src/Entities/Player.hpp src/Entities/Entity.cpp src/States/State.hpp src/States/StateMachine.cpp src/States/StateMachine.hpp src/AssetManager.cpp src/AssetManager.hpp src/InputManager.cpp src/InputManager.hpp src/Game.cpp src/Game.hpp src/Definitions.hpp src/States/SplashState.cpp src/States/SplashState.hpp src/States/MainMenuState.cpp src/States/MainMenuState.hpp src/States/GameState.cpp src/States/GameState.hpp src/States/Button.cpp src/States/Button.hpp src/States/PlayButton.cpp src/States/PlayButton.hpp src/States/ExitButton.cpp src/States/ExitButton.hpp src/Components/MovementComponent.cpp src/Components/MovementComponent.hpp)
add_executable(SFMLGame ${SOURCE_FILES})

if(WIN32)
    set(SFML_DIR C:/SFML/lib/cmake/SFML)
else()
    set(SFML_DIR /usr/lib/x86_64-linux-gnu/cmake/SFML)
endif ()

find_package(SFML COMPONENTS graphics REQUIRED)
if(SFML_FOUND)
    include_directories(${SFML_INCLUDE_DIR})
    target_link_libraries(SFMLGame sfml-graphics)
endif()